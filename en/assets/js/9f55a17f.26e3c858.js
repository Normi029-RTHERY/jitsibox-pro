"use strict";(self.webpackChunknew_project=self.webpackChunknew_project||[]).push([[4321],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7062:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:3},l="Bridge",o={unversionedId:"structure/composants/bridge",id:"structure/composants/bridge",title:"Bridge",description:"Le backend est le c\u0153ur de l'application. Il agit comme un pont entre les contr\xf4leurs et l'\xe9cran principal.",source:"@site/docs/structure/composants/bridge.md",sourceDirName:"structure/composants",slug:"/structure/composants/bridge",permalink:"/jitsibox-pro/en/docs/structure/composants/bridge",draft:!1,editUrl:"https://github.com/snapcom-factory/jitsibox-pro/tree/wiki/i18n/en/docusaurus-plugin-content-docs/current/structure/composants/bridge.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Main-screen",permalink:"/jitsibox-pro/en/docs/structure/composants/main-screen"},next:{title:"Fonctionnement de l'application",permalink:"/jitsibox-pro/en/docs/structure/fonctionnement/"}},s={},c=[{value:"Mise \xe0 jour",id:"mise-\xe0-jour",level:2},{value:"Statut global",id:"statut-global",level:2},{value:"Fichier principal : <code>index.ts</code>",id:"fichier-principal--indexts",level:2},{value:"Controllers",id:"controllers",level:2},{value:"Main screen",id:"main-screen",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"bridge"},"Bridge"),(0,i.kt)("h1",{id:"arborescence-du-dossier-bridge"},"Arborescence du dossier Bridge"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\njitsibox-pro/services/bridge/\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 controllers.ts \n\u2502   \u251c\u2500\u2500 index.ts\n\u2502   \u251c\u2500\u2500 mainScreens.ts \n\u2502   \u251c\u2500\u2500 model.ts\n\u2502   \u2514\u2500\u2500 status.ts\n\u251c\u2500\u2500 package-lock.json \n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 tsconfig.json\n\n")),(0,i.kt)("h1",{id:"services"},"Services"),(0,i.kt)("p",null,"Le backend est le c\u0153ur de l'application. Il agit comme un pont entre les contr\xf4leurs et l'\xe9cran principal."),(0,i.kt)("p",null,"Le code est \xe9crit en ",(0,i.kt)("a",{parentName:"p",href:"https://expressjs.com/en/api.html"},"ExpressJS"),", et est divis\xe9 en quatre parties qui seront d\xe9crites ci-dessous :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#statut-global"},"Statut global")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#fichier-principal--indexts"},"Fichier principal")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#controllers"},"Contr\xf4leurs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#main-screen"},"\xc9cran principal"))),(0,i.kt)("h2",{id:"mise-\xe0-jour"},"Mise \xe0 jour"),(0,i.kt)("p",null,"Aucune mise \xe0 jour \xe0 chaud n'a encore \xe9t\xe9 impl\xe9ment\xe9e, il faut donc red\xe9marrer le serveur pour mettre \xe0 jour le code."),(0,i.kt)("h2",{id:"statut-global"},"Statut global"),(0,i.kt)("p",null,"L'\xe9tat global est actuellement stock\xe9 dans un dictionnaire, et vise \xe0 garder une trace de l'\xe9tat actuel de l'application. Son objectif principal est d'\xe9viter les bogues li\xe9s \xe0 d'\xe9ventuelles d\xe9connexions de sockets. En fait, \xe0 chaque connexion d'un client, le serveur envoie ce dictionnaire afin que le client s'adapte \xe0 l'\xe9tat actuel de l'application."),(0,i.kt)("h2",{id:"fichier-principal--indexts"},"Fichier principal : ",(0,i.kt)("inlineCode",{parentName:"h2"},"index.ts")),(0,i.kt)("p",null,"Ce fichier initie la connexion entre le serveur de socket et ses clients. Il d\xe9marre le serveur Express, et lance le serveur de socket. Les contr\xf4leurs enverront ensuite des requ\xeates au serveur socker sur l'espace de noms ",(0,i.kt)("inlineCode",{parentName:"p"},'"/controllers"'),", tandis que l'\xe9cran principal le fera sur l'espace de noms ",(0,i.kt)("inlineCode",{parentName:"p"},'"/mainScreens"'),"."),(0,i.kt)("p",null,"Deux middlewares ont \xe9t\xe9 ajout\xe9s (en fait deux fois le m\xeame, mais pour les deux espaces de noms) afin d'impl\xe9menter une certaine authentification. Chaque fois qu'un client se connecte au serveur de socket, il doit fournir deux choses :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Un jeton d'authentification, actuellement stock\xe9 dans ",(0,i.kt)("inlineCode",{parentName:"li"},"packages/model"),", mais qui devrait \xeatre une variable d'environnement."),(0,i.kt)("li",{parentName:"ul"},"Le nom (ou l'identifiant) de la pi\xe8ce physique dans laquelle se trouve le client (pour faciliter l'impl\xe9mentation d'un serveur central, voir les \xe9tapes suivantes pour plus de d\xe9tails).\nLe middleware v\xe9rifie alors simplement si le jeton est valide, et bloque la connexion si ce n'est pas le cas.")),(0,i.kt)("p",null,"Ensuite, lors de la connexion du client, le pont envoie le dictionnaire ",(0,i.kt)("inlineCode",{parentName:"p"},"globalStatus")," au client, et ajoute le client au socket room correspondant au nom du room physique fourni par le client."),(0,i.kt)("h2",{id:"controllers"},"Controllers"),(0,i.kt)("p",null,"Ce fichier d\xe9crit le comportement du backend pour chaque \xe9v\xe9nement \xe9mis par les contr\xf4leurs. Le comportement est assez simple et toujours le m\xeame :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Mettre \xe0 jour certaines donn\xe9es dans ",(0,i.kt)("inlineCode",{parentName:"li"},"globalStatus")," si n\xe9cessaire."),(0,i.kt)("li",{parentName:"ul"},"Notifier l'\xe9cran principal que quelque chose a chang\xe9"),(0,i.kt)("li",{parentName:"ul"},"Avertir les contr\xf4leurs que quelque chose a chang\xe9 si l'accus\xe9 de r\xe9ception de l'\xe9cran principal n'est pas n\xe9cessaire")),(0,i.kt)("p",null,"Le comportement pr\xe9cis des contr\xf4leurs est d\xe9crit sur ",(0,i.kt)("a",{parentName:"p",href:"https://miro.com/app/board/uXjVOsD0w74=/?share_link_id=145031442760"},"ce lien"),"."),(0,i.kt)("h2",{id:"main-screen"},"Main screen"),(0,i.kt)("p",null,"Ce fichier d\xe9crit le comportement du backend pour chaque \xe9v\xe9nement \xe9mis par l'\xe9cran principal. Le comportement est assez simple et toujours le m\xeame :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Mettre \xe0 jour certaines donn\xe9es dans ",(0,i.kt)("inlineCode",{parentName:"li"},"globalStatus")," si n\xe9cessaire."),(0,i.kt)("li",{parentName:"ul"},"Notifier les contr\xf4leurs que quelque chose a chang\xe9")),(0,i.kt)("p",null,"Nous ne notifions pas l'\xe9cran principal \xe0 nouveau, car un seul \xe9cran principal est suppos\xe9 \xeatre connect\xe9 \xe0 la fois (et il a d\xe9j\xe0 l'information)."),(0,i.kt)("p",null,"Le comportement pr\xe9cis des contr\xf4leurs est d\xe9crit sur ",(0,i.kt)("a",{parentName:"p",href:"https://miro.com/app/board/uXjVOsD0w74=/?share_link_id=145031442760"},"ce lien"),"."))}p.isMDXComponent=!0}}]);